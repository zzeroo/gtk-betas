initSidebarItems({"constant":[["KEY_FILE_DESKTOP_GROUP",""],["KEY_FILE_DESKTOP_KEY_ACTIONS",""],["KEY_FILE_DESKTOP_KEY_CATEGORIES",""],["KEY_FILE_DESKTOP_KEY_COMMENT",""],["KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE",""],["KEY_FILE_DESKTOP_KEY_EXEC",""],["KEY_FILE_DESKTOP_KEY_FULLNAME",""],["KEY_FILE_DESKTOP_KEY_GENERIC_NAME",""],["KEY_FILE_DESKTOP_KEY_GETTEXT_DOMAIN",""],["KEY_FILE_DESKTOP_KEY_HIDDEN",""],["KEY_FILE_DESKTOP_KEY_ICON",""],["KEY_FILE_DESKTOP_KEY_KEYWORDS",""],["KEY_FILE_DESKTOP_KEY_MIME_TYPE",""],["KEY_FILE_DESKTOP_KEY_NAME",""],["KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN",""],["KEY_FILE_DESKTOP_KEY_NO_DISPLAY",""],["KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN",""],["KEY_FILE_DESKTOP_KEY_PATH",""],["KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY",""],["KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS",""],["KEY_FILE_DESKTOP_KEY_TERMINAL",""],["KEY_FILE_DESKTOP_KEY_TRY_EXEC",""],["KEY_FILE_DESKTOP_KEY_TYPE",""],["KEY_FILE_DESKTOP_KEY_URL",""],["KEY_FILE_DESKTOP_KEY_VERSION",""],["KEY_FILE_DESKTOP_TYPE_APPLICATION",""],["KEY_FILE_DESKTOP_TYPE_DIRECTORY",""],["KEY_FILE_DESKTOP_TYPE_LINK",""],["KEY_FILE_KEEP_COMMENTS",""],["KEY_FILE_KEEP_TRANSLATIONS",""],["KEY_FILE_NONE",""]],"enum":[["FileError",""],["KeyFileError",""],["UserDirectory",""]],"fn":[["get_current_time",""],["idle_add","Adds a closure to be called by the default main loop when it's idle."],["source_remove","Removes the source with the given id `source_id` from the default main context."],["timeout_add","Adds a closure to be called by the default main loop at regular intervals with millisecond granularity."],["timeout_add_seconds","Adds a closure to be called by the default main loop at regular intervals with second granularity."]],"macro":[["glib_boxed_wrapper","Wrapper implementations for Boxed types. See `glib_wrapper!`."],["glib_object_wrapper","Wrapper implementations for Object types. See `glib_wrapper!`."],["glib_shared_wrapper","Wrapper implementations for shared types. See `glib_wrapper!`."],["glib_wrapper","Defines a wrapper type and implements the appropriate traits."]],"mod":[["boxed","`IMPL` Boxed wrapper implementation."],["error","`Error` binding and helper trait."],["object","`IMPL` Object wrapper implementation and `Object` binding."],["prelude","Traits and essential types intended for blanket imports."],["shared","`IMPL` Shared (reference counted) wrapper implementation."],["signal","`IMPL` Low level signal support."],["translate","Translation between GLib/GLib-based FFI types and their Rust counterparts."],["types","Runtime type infromation."],["utils",""],["value","`Value` binding and helper traits."],["variant","`Variant` binding and helper traits."],["wrapper","`IMPL` The `glib_wrapper!` macro and miscellaneous wrapper traits."]],"struct":[["Bytes","A shared immutable byte slice (the equivalent of `Rc<[u8]>`)."],["CallbackGuard","Unwinding propagation guard. Aborts the process if destroyed while panicking."],["Continue","Continue calling the closure in the future iterations or drop it."],["KeyFile",""],["KeyFileFlags",""],["SourceId","The id of a source that is returned by `idle_add` and `timeout_add`."],["TimeVal",""],["VariantTy","Describes `Variant` types."],["VariantType","Describes `Variant` types."]]});